---
name: "tagged-release"

on:
  push:
    tags-ignore:
      - "v*"

jobs:
  gh_pre_release:
    runs-on: "ubuntu-latest"
    # env:
    #   JEST_VERBOSE: ${{ secrets.JEST_VERBOSE }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: "Checkout source code"
        uses: "actions/checkout@v2"
        with:
          lfs: true

      # - id: "yarn-cache"
      #   run: echo "::set-output name=dir::$(yarn cache dir)"
      # - uses: "actions/cache@v1"
      #   with:
      #     path: ${{ steps.yarn-cache.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      # - uses: "actions/cache@v1"
      #   with:
      #     path: "node_modules"
      #     key: ${{ runner.os }}-yarn-node-modules${{ hashFiles('**/yarn.lock') }}
      - name: Install depencies
        run: |
          make help
      #    # sudo apt update
      #    # sudo apt install ccache libssl-dev u-boot-tools python-mako debhelper fakeroot gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu make device-tree-compiler
      # - name: Setup env
      #   run: |
      #     echo "DT=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_ENV
      #     echo "KERNELVER=$(make kernelversion)" >> $GITHUB_ENV
      #     echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # - run: "make help"
      # - run: "yarn lint"
      # - run: "yarn build"
      # - run: "yarn jest --env=node --colors --forceExit"

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          # automatic_release_tag: "latest"
          prerelease: false
          # title: "Development Build"
          files: |
            LICENSE
            README.md
            *.jar

      # - name: "Automatically mirror release artifacts"
      #   env:
      #     GITHUB_SUPER_TOKEN: ${{ secrets.GITHUB_SUPER_TOKEN }}
      #   run: |
      #     ./scripts/mirror-actions.sh "$AUTOMATIC_RELEASES_TAG"

      # # marvinpinto/action-keybase-notifications
      # # marvinpinto/action-automatic-releases
      # # marvinpinto/action-inject-ssm-secrets
      # - name: "Automatically mirror release artifacts"
      #   env:
      #     GITHUB_SUPER_TOKEN: ${{ secrets.GITHUB_SUPER_TOKEN }}
      #   run: |
      #     ./scripts/mirror-actions.sh "$AUTOMATIC_RELEASES_TAG"

      # - uses: "./packages/keybase-notifications"
      #   if: always()
      #   with:
      #     job_status: ${{ job.status }}
      #     opensentinel_token: ${{ secrets.OSL_TOKEN }}